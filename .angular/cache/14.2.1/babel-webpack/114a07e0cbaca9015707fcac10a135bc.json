{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function () {\n      return this.name_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function () {\n      return this.code_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      if (this.serverResponse_) {\n        return this.message_ + '\\n' + this.serverResponse_;\n      } else {\n        return this.message_;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.serverResponse_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, service, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this.service_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(service, location) {\n    this.service = service;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this.location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this.location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this.location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this.service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.service, _this.location);\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.service.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.service, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar StorageService =\n/** @class */\nfunction () {\n  function StorageService(app, authProvider, pool, url) {\n    var _a;\n\n    this.bucket_ = null;\n    this.appId_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  StorageService.extractBucket_ = function (config) {\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    return Location.makeFromBucketSpec(bucketString);\n  };\n\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this.authProvider_.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  StorageService.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(function (request) {\n      return request.cancel();\n    });\n    this.requests_.clear();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return A firebaseStorage.Reference.\r\n   */\n\n\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n\n    if (!this.deleted_) {\n      var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\n      this.requests_.add(request_1); // Request removes itself from set when complete.\n\n      request_1.getPromise().then(function () {\n        return _this.requests_.delete(request_1);\n      }, function () {\n        return _this.requests_.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  StorageService.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageService.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  };\n\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.maxUploadRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxUploadRetryTime_ = time;\n  };\n\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this.maxOperationRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxOperationRetryTime_ = time;\n  };\n\n  Object.defineProperty(StorageService.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StorageService;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.43\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new StorageService(app, authProvider, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"names":["firebase","__awaiter","__generator","__spreadArrays","Component","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","code","message","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","enumerable","configurable","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","index","fnName","invalidArgumentCount","argMin","argMax","real","countPart","plural","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","Array","isArray","isString","String","isInteger","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","ErrorCode","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","undefined","getBlob","args","_i","arguments","bb","append","Error","sliceBlob","blob","start","webkitSlice","mozSlice","slice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","jsonObjectOrNull","obj","JSON","parse","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","sizeMapping","addRef","service","generateRef","makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","metadataValidator","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","listOptionsValidator","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata","deleteObject","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","assign","multipartUpload","genBoundary","str","Math","random","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","resumableUploadChunkSize","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","asFunctions","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","validate","specs","passed","minArgs","maxArgs","optional","validLength","validator","ArgSpec","self","and_","v1","v2","stringSpec","stringValidator","chainedValidator","uploadDataSpec","metadataSpec","listOptionSpec","nonNegativeNumberSpec","looseObjectSpec","isLooseObjectValidator","isLooseObject","nullFunctionSpec","async","f","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","service_","location_","blob_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","reject","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","createRequest","makeRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","currentSize","metadataRequest","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","typeValidator","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","anyDefined","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","catch","notifyObserver_","splice","finishPromise_","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","newRef","put","throwIfRoot_","putString","delete","listAll","accumulator","listAllHelper","opt","nextPage","label","sent","options","op","getDownloadURL","FailRequest","_appDelete","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","call","mustStop","waitMillis","stopped","stop","wasTimeout","clearTimeout","id","NetworkRequest","errorCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","doTheRequest","backoffCallback","RequestEndStatus","progressListener","progressEvent","lengthComputable","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","addVersionHeader_","SDK_VERSION","addGmpidHeader_","appId","StorageService","app","authProvider","bucket_","appId_","deleted_","app_","authProvider_","maxOperationRetryTime_","maxUploadRetryTime_","requests_","Set","extractBucket_","internals_","ServiceInternals","config","auth","tokenData","getImmediate","getToken","accessToken","deleteApp","request","clear","request_1","add","test","refFromURL","setMaxUploadRetryTime","time","setMaxOperationRetryTime","STORAGE_TYPE","factory","container","getProvider","registerStorage","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@firebase/storage/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            if (this.serverResponse_) {\r\n                return this.message_ + '\\n' + this.serverResponse_;\r\n            }\r\n            else {\r\n                return this.message_;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw ('Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].');\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, service, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.service_ = service;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.service_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(service, location) {\r\n        this.service = service;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.service, _this.location);\r\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.service, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\r\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\r\n            return _this.service.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.service.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\r\n            return _this.service\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService(app, authProvider, pool, url) {\r\n        var _a;\r\n        this.bucket_ = null;\r\n        this.appId_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        this.authProvider_ = authProvider;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requests_ = new Set();\r\n        this.pool_ = pool;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    StorageService.extractBucket_ = function (config) {\r\n        var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        return Location.makeFromBucketSpec(bucketString);\r\n    };\r\n    StorageService.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this.authProvider_.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    StorageService.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requests_.forEach(function (request) { return request.cancel(); });\r\n        this.requests_.clear();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return A firebaseStorage.Reference.\r\n     */\r\n    StorageService.prototype.makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    StorageService.prototype.makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this.deleted_) {\r\n            var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\r\n            this.requests_.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this.requests_.delete(request_1); }, function () { return _this.requests_.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageService.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageService.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this, url);\r\n    };\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.maxUploadRetryTime_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this.maxOperationRetryTime_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    Object.defineProperty(StorageService.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return StorageService;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.43\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    return new StorageService(app, authProvider, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: StorageService,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}