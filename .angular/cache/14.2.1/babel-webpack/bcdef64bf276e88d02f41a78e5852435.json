{"ast":null,"code":"import _asyncToGenerator from \"/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class UserAuthService {\n  constructor(auth) {\n    this.auth = auth;\n  }\n\n  googleSignIn() {\n    return _asyncToGenerator(function* () {\n      const provider = new GoogleAuthProvider();\n\n      try {\n        const result = yield signInWithPopup(getAuth(), provider); // Use result.user here\n\n        return result;\n      } catch (error) {\n        console.error(error); // Handle errors here\n      }\n    })();\n  }\n\n  logout() {\n    return _asyncToGenerator(function* () {\n      try {\n        yield signOut(getAuth());\n        console.log(\"signed out\");\n      } catch (error) {\n        console.error(\"failed\", error);\n      }\n    })();\n  }\n\n}\n\nUserAuthService.ɵfac = function UserAuthService_Factory(t) {\n  return new (t || UserAuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n\nUserAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserAuthService,\n  factory: UserAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,OAAvD,QAAsE,eAAtE;;;AAKA,OAAM,MAAOC,eAAP,CAAsB;EAE1BC,YAAoBC,IAApB,EAAyC;IAArB;EAA0B;;EAExCC,YAAY;IAAA;MAChB,MAAMC,QAAQ,GAAG,IAAIN,kBAAJ,EAAjB;;MACA,IAAI;QACF,MAAMO,MAAM,SAASR,eAAe,CAACD,OAAO,EAAR,EAAYQ,QAAZ,CAApC,CADE,CAEF;;QACA,OAAOC,MAAP;MACD,CAJD,CAIE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd,EADc,CAEd;MACD;IATe;EAUjB;;EAEKE,MAAM;IAAA;MACV,IAAG;QACD,MAAMT,OAAO,CAACH,OAAO,EAAR,CAAb;QACCW,OAAO,CAACE,GAAR,CAAY,YAAZ;MACF,CAHD,CAIA,OAAMH,KAAN,EAAY;QACVC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAuBA,KAAvB;MACD;IAPS;EAQX;;AAxByB;;;mBAAfN,iBAAeU;AAAA;;;SAAfV;EAAeW,SAAfX,eAAe;EAAAY,YAFd","names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","UserAuthService","constructor","auth","googleSignIn","provider","result","error","console","logout","log","i0","factory","providedIn"],"sourceRoot":"","sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/src/app/user-auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n\n  constructor(private auth: AngularFireAuth) { }\n\n  async googleSignIn() {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(getAuth(), provider);\n      // Use result.user here\n      return result;\n    } catch (error) {\n      console.error(error);\n      // Handle errors here\n    }\n  }\n\n  async logout(){\n    try{\n      await signOut(getAuth());\n       console.log(\"signed out\");\n    }\n    catch(error){\n      console.error(\"failed\",error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}