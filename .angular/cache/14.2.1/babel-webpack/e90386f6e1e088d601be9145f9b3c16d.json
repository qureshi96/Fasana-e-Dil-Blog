{"ast":null,"code":"import { fromRef } from '../observable/fromRef';\nimport { of, merge } from 'rxjs';\nimport { isNil } from '../utils';\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\nexport function listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n    const childEvent$ = [of(snapshotAction)];\n    events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n    return merge(...childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n\nfunction positionFor(changes, key) {\n  const len = changes.length;\n\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const {\n    payload,\n    type,\n    prevKey,\n    key\n  } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {\n            payload,\n            type: 'value',\n            prevKey,\n            key: payload.key\n          };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n\n      return current;\n\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        const previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.key || null) != prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n\n      return current;\n\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n\n    default:\n      return current;\n  }\n}","map":{"version":3,"names":["fromRef","of","merge","isNil","switchMap","distinctUntilChanged","scan","listChanges","ref","events","scheduler","pipe","snapshotAction","childEvent$","forEach","event","push","buildView","positionFor","changes","key","len","length","i","payload","positionAfter","prevKey","current","action","type","currentKeyPosition","afterPreviousKeyPosition","exists","previous","filter","x","splice","slice","map","data"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/database/es2015/list/changes.js"],"sourcesContent":["import { fromRef } from '../observable/fromRef';\nimport { of, merge } from 'rxjs';\nimport { isNil } from '../utils';\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\nexport function listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, type, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        default:\n            return current;\n    }\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,EAAT,EAAaC,KAAb,QAA0B,MAA1B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,SAAT,EAAoBC,oBAApB,EAA0CC,IAA1C,QAAsD,gBAAtD;AACA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6C;EAChD,OAAOV,OAAO,CAACQ,GAAD,EAAM,OAAN,EAAe,MAAf,EAAuBE,SAAvB,CAAP,CAAyCC,IAAzC,CAA8CP,SAAS,CAACQ,cAAc,IAAI;IAC7E,MAAMC,WAAW,GAAG,CAACZ,EAAE,CAACW,cAAD,CAAH,CAApB;IACAH,MAAM,CAACK,OAAP,CAAeC,KAAK,IAAIF,WAAW,CAACG,IAAZ,CAAiBhB,OAAO,CAACQ,GAAD,EAAMO,KAAN,EAAa,IAAb,EAAmBL,SAAnB,CAAxB,CAAxB;IACA,OAAOR,KAAK,CAAC,GAAGW,WAAJ,CAAL,CAAsBF,IAAtB,CAA2BL,IAAI,CAACW,SAAD,EAAY,EAAZ,CAA/B,CAAP;EACH,CAJ6D,CAAvD,EAIHZ,oBAAoB,EAJjB,CAAP;AAKH;;AACD,SAASa,WAAT,CAAqBC,OAArB,EAA8BC,GAA9B,EAAmC;EAC/B,MAAMC,GAAG,GAAGF,OAAO,CAACG,MAApB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;IAC1B,IAAIJ,OAAO,CAACI,CAAD,CAAP,CAAWC,OAAX,CAAmBJ,GAAnB,KAA2BA,GAA/B,EAAoC;MAChC,OAAOG,CAAP;IACH;EACJ;;EACD,OAAO,CAAC,CAAR;AACH;;AACD,SAASE,aAAT,CAAuBN,OAAvB,EAAgCO,OAAhC,EAAyC;EACrC,IAAIvB,KAAK,CAACuB,OAAD,CAAT,EAAoB;IAChB,OAAO,CAAP;EACH,CAFD,MAGK;IACD,MAAMH,CAAC,GAAGL,WAAW,CAACC,OAAD,EAAUO,OAAV,CAArB;;IACA,IAAIH,CAAC,KAAK,CAAC,CAAX,EAAc;MACV,OAAOJ,OAAO,CAACG,MAAf;IACH,CAFD,MAGK;MACD,OAAOC,CAAC,GAAG,CAAX;IACH;EACJ;AACJ;;AACD,SAASN,SAAT,CAAmBU,OAAnB,EAA4BC,MAA5B,EAAoC;EAChC,MAAM;IAAEJ,OAAF;IAAWK,IAAX;IAAiBH,OAAjB;IAA0BN;EAA1B,IAAkCQ,MAAxC;EACA,MAAME,kBAAkB,GAAGZ,WAAW,CAACS,OAAD,EAAUP,GAAV,CAAtC;EACA,MAAMW,wBAAwB,GAAGN,aAAa,CAACE,OAAD,EAAUD,OAAV,CAA9C;;EACA,QAAQE,MAAM,CAACC,IAAf;IACI,KAAK,OAAL;MACI,IAAID,MAAM,CAACJ,OAAP,IAAkBI,MAAM,CAACJ,OAAP,CAAeQ,MAAf,EAAtB,EAA+C;QAC3C,IAAIN,OAAO,GAAG,IAAd;QACAE,MAAM,CAACJ,OAAP,CAAeV,OAAf,CAAuBU,OAAO,IAAI;UAC9B,MAAMI,MAAM,GAAG;YAAEJ,OAAF;YAAWK,IAAI,EAAE,OAAjB;YAA0BH,OAA1B;YAAmCN,GAAG,EAAEI,OAAO,CAACJ;UAAhD,CAAf;UACAM,OAAO,GAAGF,OAAO,CAACJ,GAAlB;UACAO,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAaC,MAAb,CAAV;UACA,OAAO,KAAP;QACH,CALD;MAMH;;MACD,OAAOD,OAAP;;IACJ,KAAK,aAAL;MACI,IAAIG,kBAAkB,GAAG,CAAC,CAA1B,EAA6B;QACzB,MAAMG,QAAQ,GAAGN,OAAO,CAACG,kBAAkB,GAAG,CAAtB,CAAxB;;QACA,IAAI,CAACG,QAAQ,IAAIA,QAAQ,CAACb,GAArB,IAA4B,IAA7B,KAAsCM,OAA1C,EAAmD;UAC/CC,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACX,OAAF,CAAUJ,GAAV,KAAkBI,OAAO,CAACJ,GAA9C,CAAV;UACAO,OAAO,CAACS,MAAR,CAAeL,wBAAf,EAAyC,CAAzC,EAA4CH,MAA5C;QACH;MACJ,CAND,MAOK,IAAIF,OAAO,IAAI,IAAf,EAAqB;QACtB,OAAO,CAACE,MAAD,EAAS,GAAGD,OAAZ,CAAP;MACH,CAFI,MAGA;QACDA,OAAO,GAAGA,OAAO,CAACU,KAAR,EAAV;QACAV,OAAO,CAACS,MAAR,CAAeL,wBAAf,EAAyC,CAAzC,EAA4CH,MAA5C;MACH;;MACD,OAAOD,OAAP;;IACJ,KAAK,eAAL;MACI,OAAOA,OAAO,CAACO,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACX,OAAF,CAAUJ,GAAV,KAAkBI,OAAO,CAACJ,GAA9C,CAAP;;IACJ,KAAK,eAAL;MACI,OAAOO,OAAO,CAACW,GAAR,CAAYH,CAAC,IAAIA,CAAC,CAACX,OAAF,CAAUJ,GAAV,KAAkBA,GAAlB,GAAwBQ,MAAxB,GAAiCO,CAAlD,CAAP;;IACJ,KAAK,aAAL;MACI,IAAIL,kBAAkB,GAAG,CAAC,CAA1B,EAA6B;QACzB,MAAMS,IAAI,GAAGZ,OAAO,CAACS,MAAR,CAAeN,kBAAf,EAAmC,CAAnC,EAAsC,CAAtC,CAAb;QACAH,OAAO,GAAGA,OAAO,CAACU,KAAR,EAAV;QACAV,OAAO,CAACS,MAAR,CAAeL,wBAAf,EAAyC,CAAzC,EAA4CQ,IAA5C;QACA,OAAOZ,OAAP;MACH;;MACD,OAAOA,OAAP;;IACJ;MACI,OAAOA,OAAP;EAzCR;AA2CH"},"metadata":{},"sourceType":"module"}