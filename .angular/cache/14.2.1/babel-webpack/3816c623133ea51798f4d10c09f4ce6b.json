{"ast":null,"code":"import _asyncToGenerator from \"/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class UserAuthService {\n  constructor(auth) {\n    this.auth = auth;\n    this.user = new BehaviorSubject(null);\n    this.logoutclicked = false;\n    this.loginclicked = false;\n    this.initAuthListener();\n  }\n\n  googleSignIn() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const provider = new GoogleAuthProvider();\n      provider.setCustomParameters({\n        prompt: 'select_account'\n      });\n\n      try {\n        const result = yield signInWithPopup(getAuth(), provider); // Use result.user here\n\n        _this.logoutclicked = false;\n        _this.loginclicked = true;\n        return result;\n      } catch (error) {\n        console.error(error); // Handle errors here\n      }\n    })();\n  }\n\n  logout() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield signOut(getAuth());\n        _this2.loginclicked = false;\n        _this2.logoutclicked = true;\n      } catch (error) {\n        console.error(\"failed\", error);\n      }\n    })();\n  }\n\n  initAuthListener() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        this.user.next(user);\n      } else {\n        this.user.next(null);\n      }\n    });\n  }\n\n  getUser() {\n    return this.user.asObservable();\n  }\n\n}\n\nUserAuthService.ɵfac = function UserAuthService_Factory(t) {\n  return new (t || UserAuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n\nUserAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserAuthService,\n  factory: UserAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,OAAvD,EAAgEC,kBAAhE,QAA0F,eAA1F;AAEA,SAASC,eAAT,QAAgC,MAAhC;;;AAIA,OAAM,MAAOC,eAAP,CAAsB;EAK1BC,YAAoBC,IAApB,EAAyC;IAArB;IAJZ,YAAO,IAAIH,eAAJ,CAAoB,IAApB,CAAP;IACD,qBAAuB,KAAvB;IACA,oBAAuB,KAAvB;IAGL,KAAKI,gBAAL;EACD;;EAEKC,YAAY;IAAA;;IAAA;MAChB,MAAMC,QAAQ,GAAG,IAAIT,kBAAJ,EAAjB;MACAS,QAAQ,CAACC,mBAAT,CAA6B;QAC3BC,MAAM,EAAE;MADmB,CAA7B;;MAGA,IAAI;QACF,MAAMC,MAAM,SAASb,eAAe,CAACD,OAAO,EAAR,EAAYW,QAAZ,CAApC,CADE,CAEF;;QACA,KAAI,CAACI,aAAL,GAAmB,KAAnB;QACA,KAAI,CAACC,YAAL,GAAkB,IAAlB;QACA,OAAOF,MAAP;MACD,CAND,CAME,OAAOG,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd,EADc,CAEd;MACD;IAde;EAejB;;EAEKE,MAAM;IAAA;;IAAA;MACV,IAAG;QAED,MAAMhB,OAAO,CAACH,OAAO,EAAR,CAAb;QACA,MAAI,CAACgB,YAAL,GAAkB,KAAlB;QACA,MAAI,CAACD,aAAL,GAAmB,IAAnB;MAED,CAND,CAOA,OAAME,KAAN,EAAY;QACVC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAuBA,KAAvB;MACD;IAVS;EAWX;;EAEOR,gBAAgB;IACtB,MAAMD,IAAI,GAAGR,OAAO,EAApB;IACAI,kBAAkB,CAACI,IAAD,EAAQY,IAAD,IAAS;MAC9B,IAAGA,IAAH,EAAQ;QACN,KAAKA,IAAL,CAAUC,IAAV,CAAeD,IAAf;MACD,CAFD,MAGI;QACF,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf;MACD;IACJ,CAPiB,CAAlB;EASD;;EACDC,OAAO;IACL,OAAO,KAAKF,IAAL,CAAUG,YAAV,EAAP;EACD;;AArDyB;;;mBAAfjB,iBAAekB;AAAA;;;SAAflB;EAAemB,SAAfnB,eAAe;EAAAoB,YAFd","names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","BehaviorSubject","UserAuthService","constructor","auth","initAuthListener","googleSignIn","provider","setCustomParameters","prompt","result","logoutclicked","loginclicked","error","console","logout","user","next","getUser","asObservable","i0","factory","providedIn"],"sourceRoot":"","sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/src/app/user-auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n  private user = new BehaviorSubject(null);\n  public logoutclicked: boolean=false;\n  public loginclicked:boolean = false;\n\n  constructor(private auth: AngularFireAuth) { \n    this.initAuthListener();\n  }\n\n  async googleSignIn() {\n    const provider = new GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    try {\n      const result = await signInWithPopup(getAuth(), provider);\n      // Use result.user here\n      this.logoutclicked=false;\n      this.loginclicked=true;\n      return result;\n    } catch (error) {\n      console.error(error);\n      // Handle errors here\n    }\n  }\n\n  async logout(){\n    try{\n      \n      await signOut(getAuth());\n      this.loginclicked=false;\n      this.logoutclicked=true;\n       \n    }\n    catch(error){\n      console.error(\"failed\",error);\n    }\n  }\n\n  private initAuthListener(){\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) =>{\n        if(user){\n          this.user.next(user);\n        }\n        else{\n          this.user.next(null);\n        }\n    });\n\n  }\n  getUser(){\n    return this.user.asObservable();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}