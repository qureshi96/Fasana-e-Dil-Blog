{"ast":null,"code":"'use strict';\n\nvar firebase = require('@firebase/app');\n\nvar tslib = require('tslib');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\n\n\nvar errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\n\nvar HttpsErrorImpl =\n/** @class */\nfunction (_super) {\n  tslib.__extends(HttpsErrorImpl, _super);\n\n  function HttpsErrorImpl(code, message, details) {\n    var _this = _super.call(this, message) || this; // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n\n    Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\n    _this.code = code;\n    _this.details = details;\n    return _this;\n  }\n\n  return HttpsErrorImpl;\n}(Error);\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\n\n\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n\n    case 400:\n      return 'invalid-argument';\n\n    case 401:\n      return 'unauthenticated';\n\n    case 403:\n      return 'permission-denied';\n\n    case 404:\n      return 'not-found';\n\n    case 409:\n      return 'aborted';\n\n    case 429:\n      return 'resource-exhausted';\n\n    case 499:\n      return 'cancelled';\n\n    case 500:\n      return 'internal';\n\n    case 501:\n      return 'unimplemented';\n\n    case 503:\n      return 'unavailable';\n\n    case 504:\n      return 'deadline-exceeded';\n  }\n\n  return 'unknown';\n}\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\n\n\nfunction _errorForResponse(status, bodyJSON, serializer) {\n  var code = codeForHTTPStatus(status); // Start with reasonable defaults from the status code.\n\n  var description = code;\n  var details = undefined; // Then look through the body for explicit details.\n\n  try {\n    var errorJSON = bodyJSON && bodyJSON.error;\n\n    if (errorJSON) {\n      var status_1 = errorJSON.status;\n\n      if (typeof status_1 === 'string') {\n        if (!errorCodeMap[status_1]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n\n        code = errorCodeMap[status_1]; // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n\n        description = status_1;\n      }\n\n      var message = errorJSON.message;\n\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {// If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new HttpsErrorImpl(code, description, details);\n}\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\n\n\nvar ContextProvider =\n/** @class */\nfunction () {\n  function ContextProvider(authProvider, messagingProvider) {\n    var _this = this;\n\n    this.auth = null;\n    this.messaging = null;\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(function (auth) {\n        return _this.auth = auth;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(function (messaging) {\n        return _this.messaging = messaging;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n  }\n\n  ContextProvider.prototype.getAuthToken = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var token, e_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.auth) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.auth.getToken()];\n\n          case 2:\n            token = _a.sent();\n\n            if (!token) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [2\n            /*return*/\n            , token.accessToken];\n\n          case 3:\n            e_1 = _a.sent(); // If there's any error when trying to get the auth token, leave it off.\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContextProvider.prototype.getInstanceIdToken = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        if (!this.messaging || !('Notification' in self) || Notification.permission !== 'granted') {\n          return [2\n          /*return*/\n          , undefined];\n        }\n\n        try {\n          return [2\n          /*return*/\n          , this.messaging.getToken()];\n        } catch (e) {\n          // We don't warn on this, because it usually means messaging isn't set up.\n          // console.warn('Failed to retrieve instance id token.', e);\n          // If there's any error when trying to get the token, leave it off.\n          return [2\n          /*return*/\n          , undefined];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  ContextProvider.prototype.getContext = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var authToken, instanceIdToken;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAuthToken()];\n\n          case 1:\n            authToken = _a.sent();\n            return [4\n            /*yield*/\n            , this.getInstanceIdToken()];\n\n          case 2:\n            instanceIdToken = _a.sent();\n            return [2\n            /*return*/\n            , {\n              authToken: authToken,\n              instanceIdToken: instanceIdToken\n            }];\n        }\n      });\n    });\n  };\n\n  return ContextProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues( // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  var result = {};\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n\n  return result;\n}\n\nvar Serializer =\n/** @class */\nfunction () {\n  function Serializer() {} // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n\n\n  Serializer.prototype.encode = function (data) {\n    var _this = this;\n\n    if (data == null) {\n      return null;\n    }\n\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n\n    if (data === true || data === false) {\n      return data;\n    }\n\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(function (x) {\n        return _this.encode(x);\n      });\n    }\n\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data, function (x) {\n        return _this.encode(x);\n      });\n    } // If we got this far, the data is not encodable.\n\n\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }; // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n\n\n  Serializer.prototype.decode = function (json) {\n    var _this = this;\n\n    if (json == null) {\n      return json;\n    }\n\n    if (json['@type']) {\n      switch (json['@type']) {\n        case LONG_TYPE: // Fall through and handle this the same as unsigned.\n\n        case UNSIGNED_LONG_TYPE:\n          {\n            // Technically, this could work return a valid number for malformed\n            // data if there was a number followed by garbage. But it's just not\n            // worth all the extra code to detect that case.\n            var value = Number(json['value']);\n\n            if (isNaN(value)) {\n              throw new Error('Data cannot be decoded from JSON: ' + json);\n            }\n\n            return value;\n          }\n\n        default:\n          {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n      }\n    }\n\n    if (Array.isArray(json)) {\n      return json.map(function (x) {\n        return _this.decode(x);\n      });\n    }\n\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json, function (x) {\n        return _this.decode(x);\n      });\n    } // Anything else is safe to return.\n\n\n    return json;\n  };\n\n  return Serializer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\n\n\nfunction failAfter(millis) {\n  var timer;\n  var promise = new Promise(function (_, reject) {\n    timer = setTimeout(function () {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n  return {\n    timer: timer,\n    promise: promise\n  };\n}\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n   * @param app_ The FirebaseApp to use.\r\n   * @param regionOrCustomDomain_ one of:\r\n   *   a) A region to call functions from, such as us-central1\r\n   *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n   */\n  function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\n    var _this = this;\n\n    if (regionOrCustomDomain_ === void 0) {\n      regionOrCustomDomain_ = 'us-central1';\n    }\n\n    this.app_ = app_;\n    this.fetchImpl = fetchImpl;\n    this.serializer = new Serializer();\n    this.emulatorOrigin = null;\n    this.INTERNAL = {\n      delete: function () {\n        return Promise.resolve(_this.deleteService());\n      }\n    };\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider); // Cancels all ongoing requests when resolved.\n\n    this.cancelAllRequests = new Promise(function (resolve) {\n      _this.deleteService = function () {\n        return resolve();\n      };\n    }); // Resolve the region or custom domain overload by attempting to parse it.\n\n    try {\n      var url = new URL(regionOrCustomDomain_);\n      this.customDomain = url.origin;\n      this.region = 'us-central1';\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain_;\n    }\n  }\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the URL for a callable with the given name.\r\n   * @param name The name of the callable.\r\n   */\n\n  Service.prototype._url = function (name) {\n    var projectId = this.app_.options.projectId;\n\n    if (this.emulatorOrigin !== null) {\n      var origin_1 = this.emulatorOrigin;\n      return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\n    }\n\n    if (this.customDomain !== null) {\n      return this.customDomain + \"/\" + name;\n    }\n\n    return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\n  };\n  /**\r\n   * Changes this instance to point to a Cloud Functions emulator running\r\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n   *\r\n   * @param origin The origin of the local emulator, such as\r\n   * \"http://localhost:5005\".\r\n   */\n\n\n  Service.prototype.useFunctionsEmulator = function (origin) {\n    this.emulatorOrigin = origin;\n  };\n  /**\r\n   * Returns a reference to the callable https trigger with the given name.\r\n   * @param name The name of the trigger.\r\n   */\n\n\n  Service.prototype.httpsCallable = function (name, options) {\n    var _this = this;\n\n    return function (data) {\n      return _this.call(name, data, options || {});\n    };\n  };\n  /**\r\n   * Does an HTTP POST and returns the completed response.\r\n   * @param url The url to post to.\r\n   * @param body The JSON body of the post.\r\n   * @param headers The HTTP headers to include in the request.\r\n   * @return A Promise that will succeed when the request finishes.\r\n   */\n\n\n  Service.prototype.postJSON = function (url, body, headers) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var response, e_1, json, e_2;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            headers['Content-Type'] = 'application/json';\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.fetchImpl(url, {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: headers\n            })];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent(); // This could be an unhandled error on the backend, or it could be a\n            // network error. There's no way to know, since an unhandled error on the\n            // backend will fail to set the proper CORS header, and thus will be\n            // treated as a network error by fetch.\n\n            return [2\n            /*return*/\n            , {\n              status: 0,\n              json: null\n            }];\n\n          case 4:\n            json = null;\n            _a.label = 5;\n\n          case 5:\n            _a.trys.push([5, 7,, 8]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 6:\n            json = _a.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            e_2 = _a.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            return [2\n            /*return*/\n            , {\n              status: response.status,\n              json: json\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Calls a callable function asynchronously and returns the result.\r\n   * @param name The name of the callable trigger.\r\n   * @param data The data to pass as params to the function.s\r\n   */\n\n\n  Service.prototype.call = function (name, data, options) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\n\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            url = this._url(name); // Encode any special types, such as dates, in the input data.\n\n            data = this.serializer.encode(data);\n            body = {\n              data: data\n            };\n            headers = {};\n            return [4\n            /*yield*/\n            , this.contextProvider.getContext()];\n\n          case 1:\n            context = _b.sent();\n\n            if (context.authToken) {\n              headers['Authorization'] = 'Bearer ' + context.authToken;\n            }\n\n            if (context.instanceIdToken) {\n              headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\n            }\n\n            timeout = options.timeout || 70000;\n            _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\n            return [4\n            /*yield*/\n            , Promise.race([clearTimeoutWrapper(timer, this.postJSON(url, body, headers)), failAfterPromise, clearTimeoutWrapper(timer, this.cancelAllRequests)])];\n\n          case 2:\n            response = _b.sent(); // If service was deleted, interrupted response throws an error.\n\n            if (!response) {\n              throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\n            }\n\n            error = _errorForResponse(response.status, response.json, this.serializer);\n\n            if (error) {\n              throw error;\n            }\n\n            if (!response.json) {\n              throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\n            }\n\n            responseData = response.json.data; // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n            // backwards compatibility.\n\n            if (typeof responseData === 'undefined') {\n              responseData = response.json.result;\n            }\n\n            if (typeof responseData === 'undefined') {\n              // Consider the response malformed.\n              throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n            }\n\n            decodedData = this.serializer.decode(responseData);\n            return [2\n            /*return*/\n            , {\n              data: decodedData\n            }];\n        }\n      });\n    });\n  };\n\n  return Service;\n}();\n\nfunction clearTimeoutWrapper(timer, promise) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var result;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , promise];\n\n        case 1:\n          result = _a.sent(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          clearTimeout(timer);\n          return [2\n          /*return*/\n          , result];\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Functions.\r\n */\n\n\nvar FUNCTIONS_TYPE = 'functions';\n\nfunction registerFunctions(instance, fetchImpl) {\n  var namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n\n  function factory(container, regionOrCustomDomain) {\n    // Dependencies\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var messagingProvider = container.getProvider('messaging'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    return new Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\n  }\n\n  instance.INTERNAL.registerComponent(new component.Component(FUNCTIONS_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.5.1\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nregisterFunctions(firebase__default['default'], fetch.bind(self));\nfirebase__default['default'].registerVersion(name, version);","map":{"version":3,"names":["firebase","require","tslib","component","_interopDefaultLegacy","e","firebase__default","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","HttpsErrorImpl","_super","__extends","code","message","details","_this","call","Object","setPrototypeOf","prototype","Error","codeForHTTPStatus","status","_errorForResponse","bodyJSON","serializer","description","undefined","errorJSON","error","status_1","decode","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","__awaiter","token","e_1","__generator","_a","label","trys","push","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","getContext","authToken","instanceIdToken","LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","hasOwnProperty","Serializer","encode","data","Number","valueOf","isFinite","toString","Array","isArray","map","x","json","value","isNaN","failAfter","millis","timer","promise","Promise","_","reject","setTimeout","Service","app_","regionOrCustomDomain_","fetchImpl","emulatorOrigin","delete","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","defineProperty","enumerable","configurable","_url","name","projectId","options","origin_1","useFunctionsEmulator","httpsCallable","postJSON","body","headers","response","e_2","method","JSON","stringify","context","timeout","failAfterPromise","responseData","decodedData","_b","race","clearTimeoutWrapper","clearTimeout","FUNCTIONS_TYPE","registerFunctions","instance","namespaceExports","Functions","factory","container","regionOrCustomDomain","app","getProvider","registerComponent","Component","setServiceProps","setMultipleInstances","version","fetch","bind","registerVersion"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@firebase/functions/dist/index.cjs.js"],"sourcesContent":["'use strict';\n\nvar firebase = require('@firebase/app');\nvar tslib = require('tslib');\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    tslib.__extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                if (!this.messaging ||\r\n                    !('Notification' in self) ||\r\n                    Notification.permission !== 'granted') {\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                try {\r\n                    return [2 /*return*/, this.messaging.getToken()];\r\n                }\r\n                catch (e) {\r\n                    // We don't warn on this, because it usually means messaging isn't set up.\r\n                    // console.warn('Failed to retrieve instance id token.', e);\r\n                    // If there's any error when trying to get the token, leave it off.\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return tslib.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, regionOrCustomDomain) {\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new component.Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.5.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase__default['default'], fetch.bind(self));\r\nfirebase__default['default'].registerVersion(name, version);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}