{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _a;\n/**\r\n * A container for all of the Logger instances\r\n */\n\n\nvar instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n  LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n  LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n  LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n\nvar levelStringToEnum = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n/**\r\n * The default log level\r\n */\n\nvar defaultLogLevel = LogLevel.INFO;\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\n\nvar ConsoleMethod = (_a = {}, _a[LogLevel.DEBUG] = 'log', _a[LogLevel.VERBOSE] = 'log', _a[LogLevel.INFO] = 'info', _a[LogLevel.WARN] = 'warn', _a[LogLevel.ERROR] = 'error', _a);\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\n\nvar defaultLogHandler = function (instance, logType) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  if (logType < instance.logLevel) {\n    return;\n  }\n\n  var now = new Date().toISOString();\n  var method = ConsoleMethod[logType];\n\n  if (method) {\n    console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n  } else {\n    throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n  }\n};\n\nvar Logger =\n/** @class */\nfunction () {\n  /**\r\n   * Gives you an instance of a Logger to capture messages according to\r\n   * Firebase's logging scheme.\r\n   *\r\n   * @param name The name that the logs will be associated with\r\n   */\n  function Logger(name) {\n    this.name = name;\n    /**\r\n     * The log level of the given Logger instance.\r\n     */\n\n    this._logLevel = defaultLogLevel;\n    /**\r\n     * The main (internal) log handler for the Logger instance.\r\n     * Can be set to a new function in internal package code but not by user.\r\n     */\n\n    this._logHandler = defaultLogHandler;\n    /**\r\n     * The optional, additional, user-defined log handler for the Logger instance.\r\n     */\n\n    this._userLogHandler = null;\n    /**\r\n     * Capture the current instance for later use\r\n     */\n\n    instances.push(this);\n  }\n\n  Object.defineProperty(Logger.prototype, \"logLevel\", {\n    get: function () {\n      return this._logLevel;\n    },\n    set: function (val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\n      }\n\n      this._logLevel = val;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Workaround for setter/getter having to be the same type.\n\n  Logger.prototype.setLogLevel = function (val) {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  };\n\n  Object.defineProperty(Logger.prototype, \"logHandler\", {\n    get: function () {\n      return this._logHandler;\n    },\n    set: function (val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n\n      this._logHandler = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Logger.prototype, \"userLogHandler\", {\n    get: function () {\n      return this._userLogHandler;\n    },\n    set: function (val) {\n      this._userLogHandler = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * The functions below are all based on the `console` interface\r\n   */\n\n  Logger.prototype.debug = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\n  };\n\n  Logger.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\n  };\n\n  Logger.prototype.info = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\n  };\n\n  Logger.prototype.warn = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\n  };\n\n  Logger.prototype.error = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\n  };\n\n  return Logger;\n}();\n\nfunction setLogLevel(level) {\n  instances.forEach(function (inst) {\n    inst.setLogLevel(level);\n  });\n}\n\nfunction setUserLogHandler(logCallback, options) {\n  var _loop_1 = function (instance) {\n    var customLogLevel = null;\n\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = function (instance, level) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        var message = args.map(function (arg) {\n          if (arg == null) {\n            return null;\n          } else if (typeof arg === 'string') {\n            return arg;\n          } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n            return arg.toString();\n          } else if (arg instanceof Error) {\n            return arg.message;\n          } else {\n            try {\n              return JSON.stringify(arg);\n            } catch (ignored) {\n              return null;\n            }\n          }\n        }).filter(function (arg) {\n          return arg;\n        }).join(' ');\n\n        if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase(),\n            message: message,\n            args: args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  };\n\n  for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\n    var instance = instances_1[_i];\n\n    _loop_1(instance);\n  }\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","_a","instances","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","_i","logLevel","now","Date","toISOString","method","console","apply","name","Error","Logger","_logLevel","_logHandler","_userLogHandler","push","Object","defineProperty","prototype","get","set","val","TypeError","enumerable","configurable","setLogLevel","debug","log","info","warn","error","level","forEach","inst","setUserLogHandler","logCallback","options","_loop_1","customLogLevel","userLogHandler","message","map","arg","toString","JSON","stringify","ignored","filter","join","toLowerCase","type","instances_1"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@firebase/logger/dist/index.esm.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}