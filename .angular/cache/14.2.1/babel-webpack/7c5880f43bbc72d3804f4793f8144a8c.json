{"ast":null,"code":"import _defineProperty from \"/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport 'firebase/compat/auth';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i2 from '@angular/fire/app-check';\nimport { ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire/compat';\nimport { Subject, of, Observable, from, merge } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\nimport firebase from 'firebase/compat/app'; // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n// Export a null object with the same keys as firebase/compat/auth, so Proxy can work with proxy-polyfill in Internet Explorer\n\nconst proxyPolyfillCompat = {\n  name: null,\n  config: null,\n  emulatorConfig: null,\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null\n};\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\n\nconst ɵauthFactory = (app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence) => ɵcacheInstance(`${app.name}.auth`, 'AngularFireAuth', app.name, () => {\n  const auth = zone.runOutsideAngular(() => app.auth());\n\n  if (useEmulator) {\n    auth.useEmulator(...useEmulator);\n  }\n\n  if (tenantId) {\n    auth.tenantId = tenantId;\n  }\n\n  auth.languageCode = languageCode;\n\n  if (useDeviceLanguage) {\n    auth.useDeviceLanguage();\n  }\n\n  if (settings) {\n    for (const [k, v] of Object.entries(settings)) {\n      auth.settings[k] = v;\n    }\n  }\n\n  if (persistence) {\n    auth.setPersistence(persistence);\n  }\n\n  return auth;\n}, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n\nclass AngularFireAuth {\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n\n  /**\n   * Observable of the currently signed-in user's credential, or null\n   */\n  constructor(options, name, // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, useEmulator, // can't use the tuple here\n  settings, // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    _defineProperty(this, \"authState\", void 0);\n\n    _defineProperty(this, \"idToken\", void 0);\n\n    _defineProperty(this, \"user\", void 0);\n\n    _defineProperty(this, \"idTokenResult\", void 0);\n\n    _defineProperty(this, \"credential\", void 0);\n\n    const logins = new Subject();\n    const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/compat/auth'))), map(() => ɵfirebaseAppFactory(options, zone, name)), map(app => ɵauthFactory(app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence)), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n\n    if (isPlatformServer(platformId)) {\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n    } else {\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/compat/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      auth.pipe(first()).subscribe();\n      const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({\n        bufferSize: 1,\n        refCount: false\n      }));\n      const authStateChanged = auth.pipe(switchMap(auth => new Observable(sub => ({\n        unsubscribe: zone.runOutsideAngular(() => auth.onAuthStateChanged(next => sub.next(next), err => sub.error(err), () => sub.complete()))\n      }))));\n      const idTokenChanged = auth.pipe(switchMap(auth => new Observable(sub => ({\n        unsubscribe: zone.runOutsideAngular(() => auth.onIdTokenChanged(next => sub.next(next), err => sub.error(err), () => sub.complete()))\n      }))));\n      this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\n      this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\n      this.credential = merge(redirectResult, logins, // pipe in null authState to make credential zipable, just a weird devexp if\n      // authState and user go null to still have a credential\n      this.authState.pipe(filter(it => !it))).pipe( // handle the { user: { } } when a user is already logged in, rather have null\n      // TODO handle the type corcersion better\n      map(credential => credential?.user ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n    }\n\n    return ɵlazySDKProxy(this, auth, zone, {\n      spy: {\n        apply: (name, _, val) => {\n          // If they call a signIn or createUser function listen into the promise\n          // this will give us the user credential, push onto the logins Subject\n          // to be consumed in .credential\n          if (name.startsWith('signIn') || name.startsWith('createUser')) {\n            // TODO fix the types, the trouble is UserCredential has everything optional\n            val.then(user => logins.next(user));\n          }\n        }\n      }\n    });\n  }\n\n}\n\n_defineProperty(AngularFireAuth, \"\\u0275fac\", function AngularFireAuth_Factory(t) {\n  return new (t || AngularFireAuth)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i2.AppCheckInstances, 8));\n});\n\n_defineProperty(AngularFireAuth, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularFireAuth,\n  factory: AngularFireAuth.ɵfac,\n  providedIn: 'any'\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuth, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i2.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n\nclass AngularFireAuthModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'auth-compat');\n  }\n\n}\n\n_defineProperty(AngularFireAuthModule, \"\\u0275fac\", function AngularFireAuthModule_Factory(t) {\n  return new (t || AngularFireAuthModule)();\n});\n\n_defineProperty(AngularFireAuthModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularFireAuthModule\n}));\n\n_defineProperty(AngularFireAuthModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularFireAuth]\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuthModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireAuth]\n    }]\n  }], () => [], null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR, ɵauthFactory };","map":{"version":3,"names":["isPlatformServer","i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","i1","keepUnstableUntilFirst","VERSION","i2","ɵcacheInstance","ɵfirebaseAppFactory","ɵlazySDKProxy","FIREBASE_OPTIONS","FIREBASE_APP_NAME","ɵapplyMixins","Subject","of","Observable","from","merge","observeOn","switchMap","map","shareReplay","first","switchMapTo","subscribeOn","filter","firebase","proxyPolyfillCompat","name","config","emulatorConfig","app","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","currentUser","fetchSignInMethodsForEmail","isSignInWithEmailLink","getRedirectResult","languageCode","settings","onAuthStateChanged","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","setPersistence","signInAndRetrieveDataWithCredential","signInAnonymously","signInWithCredential","signInWithCustomToken","signInWithEmailAndPassword","signInWithPhoneNumber","signInWithEmailLink","signInWithPopup","signInWithRedirect","signOut","tenantId","updateCurrentUser","useDeviceLanguage","useEmulator","verifyPasswordResetCode","USE_EMULATOR","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","ɵauthFactory","zone","persistence","auth","runOutsideAngular","k","v","Object","entries","AngularFireAuth","constructor","options","platformId","schedulers","_appCheckInstances","logins","undefined","pipe","outsideAngular","bufferSize","refCount","authState","user","idToken","idTokenResult","credential","subscribe","redirectResult","then","it","authStateChanged","sub","unsubscribe","next","err","error","complete","idTokenChanged","insideAngular","getIdToken","getIdTokenResult","spy","apply","_","val","startsWith","NgZone","ɵAngularFireSchedulers","AppCheckInstances","type","args","providedIn","decorators","AngularFireAuthModule","registerVersion","full","providers"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@angular/fire/fesm2022/angular-fire-compat-auth.mjs"],"sourcesContent":["import 'firebase/compat/auth';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i2 from '@angular/fire/app-check';\nimport { ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵapplyMixins } from '@angular/fire/compat';\nimport { Subject, of, Observable, from, merge } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay, first, switchMapTo, subscribeOn, filter } from 'rxjs/operators';\nimport firebase from 'firebase/compat/app';\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\n// Export a null object with the same keys as firebase/compat/auth, so Proxy can work with proxy-polyfill in Internet Explorer\nconst proxyPolyfillCompat = {\n    name: null,\n    config: null,\n    emulatorConfig: null,\n    app: null,\n    applyActionCode: null,\n    checkActionCode: null,\n    confirmPasswordReset: null,\n    createUserWithEmailAndPassword: null,\n    currentUser: null,\n    fetchSignInMethodsForEmail: null,\n    isSignInWithEmailLink: null,\n    getRedirectResult: null,\n    languageCode: null,\n    settings: null,\n    onAuthStateChanged: null,\n    onIdTokenChanged: null,\n    sendSignInLinkToEmail: null,\n    sendPasswordResetEmail: null,\n    setPersistence: null,\n    signInAndRetrieveDataWithCredential: null,\n    signInAnonymously: null,\n    signInWithCredential: null,\n    signInWithCustomToken: null,\n    signInWithEmailAndPassword: null,\n    signInWithPhoneNumber: null,\n    signInWithEmailLink: null,\n    signInWithPopup: null,\n    signInWithRedirect: null,\n    signOut: null,\n    tenantId: null,\n    updateCurrentUser: null,\n    useDeviceLanguage: null,\n    useEmulator: null,\n    verifyPasswordResetCode: null,\n};\n\nconst USE_EMULATOR = new InjectionToken('angularfire2.auth.use-emulator');\nconst SETTINGS = new InjectionToken('angularfire2.auth.settings');\nconst TENANT_ID = new InjectionToken('angularfire2.auth.tenant-id');\nconst LANGUAGE_CODE = new InjectionToken('angularfire2.auth.langugage-code');\nconst USE_DEVICE_LANGUAGE = new InjectionToken('angularfire2.auth.use-device-language');\nconst PERSISTENCE = new InjectionToken('angularfire.auth.persistence');\nconst ɵauthFactory = (app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence) => ɵcacheInstance(`${app.name}.auth`, 'AngularFireAuth', app.name, () => {\n    const auth = zone.runOutsideAngular(() => app.auth());\n    if (useEmulator) {\n        auth.useEmulator(...useEmulator);\n    }\n    if (tenantId) {\n        auth.tenantId = tenantId;\n    }\n    auth.languageCode = languageCode;\n    if (useDeviceLanguage) {\n        auth.useDeviceLanguage();\n    }\n    if (settings) {\n        for (const [k, v] of Object.entries(settings)) {\n            auth.settings[k] = v;\n        }\n    }\n    if (persistence) {\n        auth.setPersistence(persistence);\n    }\n    return auth;\n}, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\nclass AngularFireAuth {\n    /**\n     * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n     */\n    authState;\n    /**\n     * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n     */\n    idToken;\n    /**\n     * Observable of the currently signed-in user (or null).\n     */\n    user;\n    /**\n     * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n     * helper properties for getting different data associated with the token as well as all the decoded payload claims\n     * (or null).\n     */\n    idTokenResult;\n    /**\n     * Observable of the currently signed-in user's credential, or null\n     */\n    credential;\n    constructor(options, name, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, zone, schedulers, useEmulator, // can't use the tuple here\n    settings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n        const logins = new Subject();\n        const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap(() => zone.runOutsideAngular(() => import('firebase/compat/auth'))), map(() => ɵfirebaseAppFactory(options, zone, name)), map(app => ɵauthFactory(app, zone, useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence)), shareReplay({ bufferSize: 1, refCount: false }));\n        if (isPlatformServer(platformId)) {\n            this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n        }\n        else {\n            // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n            //       (e.g, `import { auth } from 'firebase/compat/app'`) are getting an undefined auth object unexpectedly\n            //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n            //       There could potentially be race conditions still... but this greatly decreases the odds while\n            //       we reevaluate the API.\n            auth.pipe(first()).subscribe();\n            const redirectResult = auth.pipe(switchMap(auth => auth.getRedirectResult().then(it => it, () => null)), keepUnstableUntilFirst, shareReplay({ bufferSize: 1, refCount: false }));\n            const authStateChanged = auth.pipe(switchMap(auth => new Observable(sub => ({ unsubscribe: zone.runOutsideAngular(() => auth.onAuthStateChanged(next => sub.next(next), err => sub.error(err), () => sub.complete())) }))));\n            const idTokenChanged = auth.pipe(switchMap(auth => new Observable(sub => ({ unsubscribe: zone.runOutsideAngular(() => auth.onIdTokenChanged(next => sub.next(next), err => sub.error(err), () => sub.complete())) }))));\n            this.authState = redirectResult.pipe(switchMapTo(authStateChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n            this.user = redirectResult.pipe(switchMapTo(idTokenChanged), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n            this.idToken = this.user.pipe(switchMap(user => user ? from(user.getIdToken()) : of(null)));\n            this.idTokenResult = this.user.pipe(switchMap(user => user ? from(user.getIdTokenResult()) : of(null)));\n            this.credential = merge(redirectResult, logins, \n            // pipe in null authState to make credential zipable, just a weird devexp if\n            // authState and user go null to still have a credential\n            this.authState.pipe(filter(it => !it))).pipe(\n            // handle the { user: { } } when a user is already logged in, rather have null\n            // TODO handle the type corcersion better\n            map(credential => credential?.user ? credential : null), subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n        }\n        return ɵlazySDKProxy(this, auth, zone, { spy: {\n                apply: (name, _, val) => {\n                    // If they call a signIn or createUser function listen into the promise\n                    // this will give us the user credential, push onto the logins Subject\n                    // to be consumed in .credential\n                    if (name.startsWith('signIn') || name.startsWith('createUser')) {\n                        // TODO fix the types, the trouble is UserCredential has everything optional\n                        val.then((user) => logins.next(user));\n                    }\n                }\n            } });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuth, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i2.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuth, providedIn: 'any' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuth, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SETTINGS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TENANT_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LANGUAGE_CODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_DEVICE_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PERSISTENCE]\n                }] }, { type: i2.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }] });\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n\nclass AngularFireAuthModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'auth-compat');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuthModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuthModule, providers: [AngularFireAuth] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireAuthModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireAuth]\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireAuth, AngularFireAuthModule, LANGUAGE_CODE, PERSISTENCE, SETTINGS, TENANT_ID, USE_DEVICE_LANGUAGE, USE_EMULATOR, ɵauthFactory };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}