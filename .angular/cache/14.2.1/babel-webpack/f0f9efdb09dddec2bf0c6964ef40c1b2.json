{"ast":null,"code":"import _defineProperty from \"/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { ɵAPP_CHECK_PROVIDER_NAME, ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, ɵAppCheckInstances, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nexport { ɵAppCheckInstances as AppCheckInstances } from '@angular/fire';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { getLimitedUseToken as getLimitedUseToken$1, getToken as getToken$1, initializeAppCheck as initializeAppCheck$1, onTokenChanged as onTokenChanged$1, setTokenAutoRefreshEnabled as setTokenAutoRefreshEnabled$1 } from 'firebase/app-check';\nexport * from 'firebase/app-check';\n\nclass AppCheck {\n  constructor(appCheck) {\n    return appCheck;\n  }\n\n}\n\nconst appCheckInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ɵAPP_CHECK_PROVIDER_NAME))), distinct());\nconst PROVIDED_APP_CHECK_INSTANCES = new InjectionToken('angularfire2.app-check-instances');\n\nfunction defaultAppCheckInstanceFactory(provided, defaultApp) {\n  const defaultAppCheck = ɵgetDefaultInstanceOf(ɵAPP_CHECK_PROVIDER_NAME, provided, defaultApp);\n  return defaultAppCheck && new AppCheck(defaultAppCheck);\n}\n\nconst LOCALHOSTS = ['localhost', '0.0.0.0', '127.0.0.1'];\nconst isLocalhost = typeof window !== 'undefined' && LOCALHOSTS.includes(window.location.hostname);\n\nfunction appCheckInstanceFactory(fn) {\n  return (zone, injector, platformId) => {\n    // Node should use admin token provider, browser devmode and localhost should use debug token\n    if (!isPlatformServer(platformId) && (isDevMode() || isLocalhost)) {\n      globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN ??= true;\n    }\n\n    const appCheck = zone.runOutsideAngular(() => fn(injector));\n    return new AppCheck(appCheck);\n  };\n}\n\nconst APP_CHECK_INSTANCES_PROVIDER = {\n  provide: ɵAppCheckInstances,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES]]\n};\nconst DEFAULT_APP_CHECK_INSTANCE_PROVIDER = {\n  provide: AppCheck,\n  useFactory: defaultAppCheckInstanceFactory,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\n\nclass AppCheckModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'app-check');\n  }\n\n}\n\n_defineProperty(AppCheckModule, \"\\u0275fac\", function AppCheckModule_Factory(t) {\n  return new (t || AppCheckModule)();\n});\n\n_defineProperty(AppCheckModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AppCheckModule\n}));\n\n_defineProperty(AppCheckModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppCheckModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\n\nfunction provideAppCheck(fn, ...deps) {\n  return {\n    ngModule: AppCheckModule,\n    providers: [{\n      provide: PROVIDED_APP_CHECK_INSTANCES,\n      useFactory: appCheckInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, PLATFORM_ID, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n} // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\n\nconst getLimitedUseToken = ɵzoneWrap(getLimitedUseToken$1, true);\nconst getToken = ɵzoneWrap(getToken$1, true);\nconst initializeAppCheck = ɵzoneWrap(initializeAppCheck$1, true);\nconst onTokenChanged = ɵzoneWrap(onTokenChanged$1, true);\nconst setTokenAutoRefreshEnabled = ɵzoneWrap(setTokenAutoRefreshEnabled$1, true);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppCheck, AppCheckModule, appCheckInstance$, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, provideAppCheck, setTokenAutoRefreshEnabled };","map":{"version":3,"names":["ɵAPP_CHECK_PROVIDER_NAME","ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","ɵAppCheckInstances","VERSION","ɵAngularFireSchedulers","ɵzoneWrap","AppCheckInstances","from","timer","concatMap","distinct","isPlatformServer","i0","InjectionToken","isDevMode","Optional","PLATFORM_ID","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","registerVersion","getLimitedUseToken","getLimitedUseToken$1","getToken","getToken$1","initializeAppCheck","initializeAppCheck$1","onTokenChanged","onTokenChanged$1","setTokenAutoRefreshEnabled","setTokenAutoRefreshEnabled$1","AppCheck","constructor","appCheck","appCheckInstance$","pipe","PROVIDED_APP_CHECK_INSTANCES","defaultAppCheckInstanceFactory","provided","defaultApp","defaultAppCheck","LOCALHOSTS","isLocalhost","window","includes","location","hostname","appCheckInstanceFactory","fn","zone","injector","platformId","globalThis","FIREBASE_APPCHECK_DEBUG_TOKEN","runOutsideAngular","APP_CHECK_INSTANCES_PROVIDER","provide","deps","DEFAULT_APP_CHECK_INSTANCE_PROVIDER","useFactory","AppCheckModule","full","type","args","providers","provideAppCheck","ngModule","multi"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@angular/fire/fesm2022/angular-fire-app-check.mjs"],"sourcesContent":["import { ɵAPP_CHECK_PROVIDER_NAME, ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, ɵAppCheckInstances, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nexport { ɵAppCheckInstances as AppCheckInstances } from '@angular/fire';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { getLimitedUseToken as getLimitedUseToken$1, getToken as getToken$1, initializeAppCheck as initializeAppCheck$1, onTokenChanged as onTokenChanged$1, setTokenAutoRefreshEnabled as setTokenAutoRefreshEnabled$1 } from 'firebase/app-check';\nexport * from 'firebase/app-check';\n\nclass AppCheck {\n    constructor(appCheck) {\n        return appCheck;\n    }\n}\nconst appCheckInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ɵAPP_CHECK_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_APP_CHECK_INSTANCES = new InjectionToken('angularfire2.app-check-instances');\nfunction defaultAppCheckInstanceFactory(provided, defaultApp) {\n    const defaultAppCheck = ɵgetDefaultInstanceOf(ɵAPP_CHECK_PROVIDER_NAME, provided, defaultApp);\n    return defaultAppCheck && new AppCheck(defaultAppCheck);\n}\nconst LOCALHOSTS = ['localhost', '0.0.0.0', '127.0.0.1'];\nconst isLocalhost = typeof window !== 'undefined' && LOCALHOSTS.includes(window.location.hostname);\nfunction appCheckInstanceFactory(fn) {\n    return (zone, injector, platformId) => {\n        // Node should use admin token provider, browser devmode and localhost should use debug token\n        if (!isPlatformServer(platformId) && (isDevMode() || isLocalhost)) {\n            globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN ??= true;\n        }\n        const appCheck = zone.runOutsideAngular(() => fn(injector));\n        return new AppCheck(appCheck);\n    };\n}\nconst APP_CHECK_INSTANCES_PROVIDER = {\n    provide: ɵAppCheckInstances,\n    deps: [\n        [new Optional(), PROVIDED_APP_CHECK_INSTANCES],\n    ]\n};\nconst DEFAULT_APP_CHECK_INSTANCE_PROVIDER = {\n    provide: AppCheck,\n    useFactory: defaultAppCheckInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_APP_CHECK_INSTANCES],\n        FirebaseApp,\n        PLATFORM_ID,\n    ]\n};\nclass AppCheckModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'app-check');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AppCheckModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.6\", ngImport: i0, type: AppCheckModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AppCheckModule, providers: [\n            DEFAULT_APP_CHECK_INSTANCE_PROVIDER,\n            APP_CHECK_INSTANCES_PROVIDER,\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AppCheckModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_APP_CHECK_INSTANCE_PROVIDER,\n                        APP_CHECK_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: () => [] });\nfunction provideAppCheck(fn, ...deps) {\n    return {\n        ngModule: AppCheckModule,\n        providers: [{\n                provide: PROVIDED_APP_CHECK_INSTANCES,\n                useFactory: appCheckInstanceFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    Injector,\n                    PLATFORM_ID,\n                    ɵAngularFireSchedulers,\n                    FirebaseApps,\n                    ...deps,\n                ]\n            }]\n    };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getLimitedUseToken = ɵzoneWrap(getLimitedUseToken$1, true);\nconst getToken = ɵzoneWrap(getToken$1, true);\nconst initializeAppCheck = ɵzoneWrap(initializeAppCheck$1, true);\nconst onTokenChanged = ɵzoneWrap(onTokenChanged$1, true);\nconst setTokenAutoRefreshEnabled = ɵzoneWrap(setTokenAutoRefreshEnabled$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppCheck, AppCheckModule, appCheckInstance$, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, provideAppCheck, setTokenAutoRefreshEnabled };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}