{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar firebase = require('@firebase/app');\n\nrequire('@firebase/installations');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.2\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\n\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\n\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\n\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\n\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\"\n/* TRACE_STARTED_BEFORE */\n] = 'Trace {$traceName} was started before.', _a[\"trace stopped\"\n/* TRACE_STOPPED_BEFORE */\n] = 'Trace {$traceName} is not running.', _a[\"nonpositive trace startTime\"\n/* NONPOSITIVE_TRACE_START_TIME */\n] = 'Trace {$traceName} startTime should be positive.', _a[\"nonpositive trace duration\"\n/* NONPOSITIVE_TRACE_DURATION */\n] = 'Trace {$traceName} duration should be positive.', _a[\"no window\"\n/* NO_WINDOW */\n] = 'Window is not available.', _a[\"no app id\"\n/* NO_APP_ID */\n] = 'App id is not available.', _a[\"no project id\"\n/* NO_PROJECT_ID */\n] = 'Project id is not available.', _a[\"no api key\"\n/* NO_API_KEY */\n] = 'Api key is not available.', _a[\"invalid cc log\"\n/* INVALID_CC_LOG */\n] = 'Attempted to queue invalid cc event', _a[\"FB not default\"\n/* FB_NOT_DEFAULT */\n] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\"\n/* RC_NOT_OK */\n] = 'RC response is not ok', _a[\"invalid attribute name\"\n/* INVALID_ATTRIBUTE_NAME */\n] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\"\n/* INVALID_ATTRIBUTE_VALUE */\n] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalid custom metric name\"\n/* INVALID_CUSTOM_METRIC_NAME */\n] = 'Custom metric name {$customMetricName} is invalid', _a[\"invalid String merger input\"\n/* INVALID_STRING_MERGER_PARAMETER */\n] = 'Input for String merger is invalid, contact support team to resolve.', _a);\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\n\nvar Api =\n/** @class */\nfunction () {\n  function Api(window) {\n    this.window = window;\n\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  Api.prototype.getUrl = function () {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  };\n\n  Api.prototype.mark = function (name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n\n    this.performance.mark(name);\n  };\n\n  Api.prototype.measure = function (measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n\n    this.performance.measure(measureName, mark1, mark2);\n  };\n\n  Api.prototype.getEntriesByType = function (type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n\n    return this.performance.getEntriesByType(type);\n  };\n\n  Api.prototype.getEntriesByName = function (name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n\n    return this.performance.getEntriesByName(name);\n  };\n\n  Api.prototype.getTimeOrigin = function () {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  };\n\n  Api.prototype.requiredApisAvailable = function () {\n    if (!fetch || !Promise || !this.navigator || !this.navigator.cookieEnabled) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n\n    if (!util.isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n\n    return true;\n  };\n\n  Api.prototype.setupObserver = function (entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n\n    var observer = new this.PerformanceObserver(function (list) {\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n        var entry = _a[_i]; // `entry` is a PerformanceEntry instance.\n\n        callback(entry);\n      }\n    }); // Start observing the entry types you care about.\n\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  };\n\n  Api.getInstance = function () {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n\n    return apiInstance;\n  };\n\n  return Api;\n}();\n\nfunction setupApi(window) {\n  windowInstance = window;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction mergeStrings(part1, part2) {\n  var sizeDiff = part1.length - part2.length;\n\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\"\n    /* INVALID_STRING_MERGER_PARAMETER */\n    );\n  }\n\n  var resultArray = [];\n\n  for (var i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar settingsServiceInstance;\n\nvar SettingsService =\n/** @class */\nfunction () {\n  function SettingsService() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\n\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\n\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\n\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\n\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto'; // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV'); // Source type for performance event logs.\n\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\n\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\n\n    this.configTimeToLive = 12;\n  }\n\n  SettingsService.prototype.getAppId = function () {\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"no app id\"\n      /* NO_APP_ID */\n      );\n    }\n\n    return appId;\n  };\n\n  SettingsService.prototype.getProjectId = function () {\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"no project id\"\n      /* NO_PROJECT_ID */\n      );\n    }\n\n    return projectId;\n  };\n\n  SettingsService.prototype.getApiKey = function () {\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"no api key\"\n      /* NO_API_KEY */\n      );\n    }\n\n    return apiKey;\n  };\n\n  SettingsService.prototype.getFlTransportFullUrl = function () {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  };\n\n  SettingsService.getInstance = function () {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n\n    return settingsServiceInstance;\n  };\n\n  return SettingsService;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar iid;\n\nfunction getIidPromise() {\n  var iidPromise = SettingsService.getInstance().installationsService.getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  iidPromise.then(function (iidVal) {\n    iid = iidVal;\n  });\n  return iidPromise;\n} // This method should be used after the iid is retrieved by getIidPromise method.\n\n\nfunction getIid() {\n  return iid;\n}\n\nfunction getAuthTokenPromise() {\n  var authTokenPromise = SettingsService.getInstance().installationsService.getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  authTokenPromise.then(function (authTokenVal) {});\n  return authTokenPromise;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityState;\n\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\n\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nfunction getServiceWorkerStatus() {\n  var navigator = Api.getInstance().navigator;\n\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2\n      /* CONTROLLED */\n      ;\n    } else {\n      return 3\n      /* UNCONTROLLED */\n      ;\n    }\n  } else {\n    return 1\n    /* UNSUPPORTED */\n    ;\n  }\n}\n\nfunction getVisibilityState() {\n  var document = Api.getInstance().document;\n  var visibilityState = document.visibilityState;\n\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nfunction getEffectiveConnectionType() {\n  var navigator = Api.getInstance().navigator;\n  var navigatorConnection = navigator.connection;\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1\n      /* CONNECTION_SLOW_2G */\n      ;\n\n    case '2g':\n      return 2\n      /* CONNECTION_2G */\n      ;\n\n    case '3g':\n      return 3\n      /* CONNECTION_3G */\n      ;\n\n    case '4g':\n      return 4\n      /* CONNECTION_4G */\n      ;\n\n    default:\n      return 0\n      /* UNKNOWN */\n      ;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n    return name.startsWith(prefix);\n  });\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\n\nvar DEFAULT_CONFIGS = {\n  loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nfunction getConfig(iid) {\n  var config = getStoredConfig();\n\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid).then(processConfig).then(function (config) {\n    return storeConfig(config);\n  },\n  /** Do nothing for error, use defaults set in settings service. */\n  function () {});\n}\n\nfunction getStoredConfig() {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!localStorage) {\n    return;\n  }\n\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n\n  if (!configStringified) {\n    return;\n  }\n\n  try {\n    var configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\n\nfunction storeConfig(config) {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\n\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise().then(function (authToken) {\n    var projectId = SettingsService.getInstance().getProjectId();\n    var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n    var request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n      },\n\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: SettingsService.getInstance().getAppId(),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n\n    });\n    return fetch(request).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } // In case response is not ok. This will be caught by catch.\n\n\n      throw ERROR_FACTORY.create(\"RC response not ok\"\n      /* RC_NOT_OK */\n      );\n    });\n  }).catch(function () {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\n\n\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n\n  var settingsServiceInstance = SettingsService.getInstance();\n  var entries = config.entries || {};\n\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } // Key from Remote Config has to be non-empty string, otherwsie use local value.\n\n\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  }\n\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } // Set the per session trace and network logging flags.\n\n\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\n\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar initializationStatus = 1\n/* notInitialized */\n;\nvar initializationPromise;\n\nfunction getInitializationPromise() {\n  initializationStatus = 2\n  /* initializationPending */\n  ;\n  initializationPromise = initializationPromise || initializePerf();\n  return initializationPromise;\n}\n\nfunction isPerfInitialized() {\n  return initializationStatus === 3\n  /* initialized */\n  ;\n}\n\nfunction initializePerf() {\n  return getDocumentReadyComplete().then(function () {\n    return getIidPromise();\n  }).then(function (iid) {\n    return getConfig(iid);\n  }).then(function () {\n    return changeInitializationStatus();\n  }, function () {\n    return changeInitializationStatus();\n  });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\n\n\nfunction getDocumentReadyComplete() {\n  var document = Api.getInstance().document;\n  return new Promise(function (resolve) {\n    if (document && document.readyState !== 'complete') {\n      var handler_1 = function () {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler_1);\n          resolve();\n        }\n      };\n\n      document.addEventListener('readystatechange', handler_1);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus() {\n  initializationStatus = 3\n  /* initialized */\n  ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000; // If end point does not work, the call will be tried for these many times.\n\nvar DEFAULT_REMAINING_TRIES = 3;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\n\nvar queue = [];\nvar isTransportSetup = false;\n\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\nfunction processQueue(timeOffset) {\n  setTimeout(function () {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    } // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n\n\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents() {\n  // Capture a snapshot of the queue and empty the \"official queue\".\n  var staged = tslib.__spreadArrays(queue);\n\n  queue = [];\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n\n  var log_event = staged.map(function (evt) {\n    return {\n      source_extension_json_proto3: evt.message,\n      event_time_ms: String(evt.eventTime)\n    };\n  });\n  var data = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1,\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event: log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged).catch(function () {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = tslib.__spreadArrays(staged, queue);\n    remainingTries--;\n    consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(data, staged) {\n  return postToFlEndpoint(data).then(function (res) {\n    if (!res.ok) {\n      consoleLogger.info('Call to Firebase backend failed.');\n    }\n\n    return res.json();\n  }).then(function (res) {\n    // Find the next call wait time from the response.\n    var transportWait = Number(res.nextRequestWaitMillis);\n    var requestOffset = DEFAULT_SEND_INTERVAL_MS;\n\n    if (!isNaN(transportWait)) {\n      requestOffset = Math.max(transportWait, requestOffset);\n    } // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n    // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n\n\n    var logResponseDetails = res.logResponseDetails;\n\n    if (Array.isArray(logResponseDetails) && logResponseDetails.length > 0 && logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\n      queue = tslib.__spreadArrays(staged, queue);\n      consoleLogger.info(\"Retry transport request later.\");\n    }\n\n    remainingTries = DEFAULT_REMAINING_TRIES; // Schedule the next process.\n\n    processQueue(requestOffset);\n  });\n}\n\nfunction postToFlEndpoint(data) {\n  var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\"\n    /* INVALID_CC_LOG */\n    );\n  } // Add the new event to the queue.\n\n\n  queue = tslib.__spreadArrays(queue, [evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\n\n\nfunction transportHandler( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var message = serializer.apply(void 0, args);\n    addToQueue({\n      message: message,\n      eventTime: Date.now()\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enble camelcase */\n\n\nvar logger; // This method is not called before initialization.\n\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n\n  logger(resource, resourceType);\n}\n\nfunction logTrace(trace) {\n  var settingsService = SettingsService.getInstance(); // Do not log if trace is auto generated and instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  } // Do not log if trace is custom and data collection is disabled.\n\n\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  } // Do not log if required apis are not available.\n\n\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  } // Only log the page load auto traces if page is visible.\n\n\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(function () {\n      return sendTraceLog(trace);\n    }, function () {\n      return sendTraceLog(trace);\n    });\n  }\n}\n\nfunction sendTraceLog(trace) {\n  if (!getIid()) {\n    return;\n  }\n\n  var settingsService = SettingsService.getInstance();\n\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return sendLog(trace, 1\n    /* Trace */\n    );\n  }, 0);\n}\n\nfunction logNetworkRequest(networkRequest) {\n  var settingsService = SettingsService.getInstance(); // Do not log network requests if instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  } // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n\n\n  var networkRequestUrl = networkRequest.url; // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n\n  var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return sendLog(networkRequest, 0\n    /* NetworkRequest */\n    );\n  }, 0);\n}\n\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0\n  /* NetworkRequest */\n  ) {\n    return serializeNetworkRequest(resource);\n  }\n\n  return serializeTrace(resource);\n}\n\nfunction serializeNetworkRequest(networkRequest) {\n  var networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace) {\n  var traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n\n  var customAttributes = trace.getAttributes();\n\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo() {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\n\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\n\n\nfunction convertMetricValueToInteger(providedValue) {\n  var valueAsInteger = Math.floor(providedValue);\n\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\n  }\n\n  return valueAsInteger;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /**\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  function Trace(name, isAuto, traceMeasureName) {\n    if (isAuto === void 0) {\n      isAuto = false;\n    }\n\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1\n    /* UNINITIALIZED */\n    ;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n\n    if (!this.isAuto) {\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n\n\n  Trace.prototype.start = function () {\n    if (this.state !== 1\n    /* UNINITIALIZED */\n    ) {\n      throw ERROR_FACTORY.create(\"trace started\"\n      /* TRACE_STARTED_BEFORE */\n      , {\n        traceName: this.name\n      });\n    }\n\n    this.api.mark(this.traceStartMark);\n    this.state = 2\n    /* RUNNING */\n    ;\n  };\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n\n\n  Trace.prototype.stop = function () {\n    if (this.state !== 2\n    /* RUNNING */\n    ) {\n      throw ERROR_FACTORY.create(\"trace stopped\"\n      /* TRACE_STOPPED_BEFORE */\n      , {\n        traceName: this.name\n      });\n    }\n\n    this.state = 3\n    /* TERMINATED */\n    ;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  };\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n\n\n  Trace.prototype.record = function (startTime, duration, options) {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace startTime\"\n      /* NONPOSITIVE_TRACE_START_TIME */\n      , {\n        traceName: this.name\n      });\n    }\n\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace duration\"\n      /* NONPOSITIVE_TRACE_DURATION */\n      , {\n        traceName: this.name\n      });\n    }\n\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n\n    if (options && options.attributes) {\n      this.customAttributes = tslib.__assign({}, options.attributes);\n    }\n\n    if (options && options.metrics) {\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n        var metric = _a[_i];\n\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n\n    logTrace(this);\n  };\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist. The value will be floored down to an\r\n   * integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Increment by value\r\n   */\n\n\n  Trace.prototype.incrementMetric = function (counter, numAsInteger) {\n    if (numAsInteger === void 0) {\n      numAsInteger = 1;\n    }\n\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  };\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist. The value will be floored down to an integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Set custom metric to this value\r\n   */\n\n\n  Trace.prototype.putMetric = function (counter, numAsInteger) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(\"invalid custom metric name\"\n      /* INVALID_CUSTOM_METRIC_NAME */\n      , {\n        customMetricName: counter\n      });\n    }\n  };\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n\n\n  Trace.prototype.getMetric = function (counter) {\n    return this.counters[counter] || 0;\n  };\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n\n\n  Trace.prototype.putAttribute = function (attr, value) {\n    var isValidName = isValidCustomAttributeName(attr);\n    var isValidValue = isValidCustomAttributeValue(value);\n\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    } // Throw appropriate error when the attribute name or value is invalid.\n\n\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\"\n      /* INVALID_ATTRIBUTE_NAME */\n      , {\n        attributeName: attr\n      });\n    }\n\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\"\n      /* INVALID_ATTRIBUTE_VALUE */\n      , {\n        attributeValue: value\n      });\n    }\n  };\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n\n\n  Trace.prototype.getAttribute = function (attr) {\n    return this.customAttributes[attr];\n  };\n\n  Trace.prototype.removeAttribute = function (attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n\n    delete this.customAttributes[attr];\n  };\n\n  Trace.prototype.getAttributes = function () {\n    return tslib.__assign({}, this.customAttributes);\n  };\n\n  Trace.prototype.setStartTime = function (startTime) {\n    this.startTimeUs = startTime;\n  };\n\n  Trace.prototype.setDuration = function (duration) {\n    this.durationUs = duration;\n  };\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n\n\n  Trace.prototype.calculateTraceMetrics = function () {\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  };\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n\n\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n    var route = Api.getInstance().getUrl();\n\n    if (!route) {\n      return;\n    }\n\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs); // navigationTimings includes only one element.\n\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n\n    var FIRST_PAINT = 'first-paint';\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n\n    if (paintTimings) {\n      var firstPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_PAINT;\n      });\n\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\n      });\n\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n\n    logTrace(trace);\n  };\n\n  Trace.createUserTimingTrace = function (measureName) {\n    var trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  };\n\n  return Trace;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createNetworkRequestEntry(entry) {\n  var performanceEntry = entry;\n\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n\n  var timeOrigin = Api.getInstance().getTimeOrigin();\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000); // Remove the query params from logged network request url.\n\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  var networkRequest = {\n    url: url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs: startTimeUs,\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n    timeToResponseCompletedUs: timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FID_WAIT_TIME_MS = 5000;\n\nfunction setupOobResources() {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  } // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n\n\n  setTimeout(function () {\n    return setupOobTraces();\n  }, 0);\n  setTimeout(function () {\n    return setupNetworkRequests();\n  }, 0);\n  setTimeout(function () {\n    return setupUserTimingTraces();\n  }, 0);\n}\n\nfunction setupNetworkRequests() {\n  var api = Api.getInstance();\n  var resources = api.getEntriesByType('resource');\n\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    createNetworkRequestEntry(resource);\n  }\n\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces() {\n  var api = Api.getInstance();\n  var navigationTimings = api.getEntriesByType('navigation');\n  var paintTimings = api.getEntriesByType('paint'); // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var timeoutId_1 = setTimeout(function () {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId_1 = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(function (fid) {\n      if (timeoutId_1) {\n        clearTimeout(timeoutId_1);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces() {\n  var api = Api.getInstance(); // Run through the measure performance entries collected up to this point.\n\n  var measures = api.getEntriesByType('measure');\n\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n    var measure = measures_1[_i];\n    createUserTimingTrace(measure);\n  } // Setup an observer to capture the measures from this point on.\n\n\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure) {\n  var measureName = measure.name; // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n\n  Trace.createUserTimingTrace(measureName);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PerformanceController =\n/** @class */\nfunction () {\n  function PerformanceController(app) {\n    this.app = app;\n\n    if (Api.getInstance().requiredApisAvailable()) {\n      util.validateIndexedDBOpenable().then(function (isAvailable) {\n        if (isAvailable) {\n          setupTransportService();\n          getInitializationPromise().then(setupOobResources, setupOobResources);\n        }\n      }).catch(function (error) {\n        consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\n      });\n    }\n  }\n\n  PerformanceController.prototype.trace = function (name) {\n    return new Trace(name);\n  };\n\n  Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n    get: function () {\n      return SettingsService.getInstance().instrumentationEnabled;\n    },\n    set: function (val) {\n      SettingsService.getInstance().instrumentationEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n    get: function () {\n      return SettingsService.getInstance().dataCollectionEnabled;\n    },\n    set: function (val) {\n      SettingsService.getInstance().dataCollectionEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PerformanceController;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nfunction registerPerformance(instance) {\n  var factoryMethod = function (app, installations) {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(\"FB not default\"\n      /* FB_NOT_DEFAULT */\n      );\n    }\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  }; // Register performance with firebase-app.\n\n\n  instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because perf has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate();\n    return factoryMethod(app, installations);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n  instance.registerVersion(name, version);\n}\n\nregisterPerformance(firebase__default['default']);\nexports.registerPerformance = registerPerformance;","map":{"version":3,"names":["Object","defineProperty","exports","value","firebase","require","tslib","util","logger$1","component","_interopDefaultLegacy","e","firebase__default","name","version","SDK_VERSION","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","_a","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","consoleLogger","Logger","logLevel","LogLevel","INFO","apiInstance","windowInstance","Api","window","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","prototype","getUrl","href","split","mark","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","info","isIndexedDBAvailable","setupObserver","entryType","callback","observer","list","_i","getEntries","length","entry","observe","entryTypes","getInstance","undefined","setupApi","mergeStrings","part1","part2","sizeDiff","resultArray","i","push","charAt","join","settingsServiceInstance","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","options","getProjectId","projectId","getApiKey","apiKey","getFlTransportFullUrl","concat","iid","getIidPromise","iidPromise","installationsService","getId","then","iidVal","getIid","getAuthTokenPromise","authTokenPromise","getToken","authTokenVal","VisibilityState","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","isValidCustomAttributeName","matchesReservedPrefix","some","prefix","startsWith","match","isValidCustomAttributeValue","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","FIS_AUTH_PREFIX","getConfig","config","getStoredConfig","processConfig","resolve","getRemoteConfig","storeConfig","expiryString","getItem","configValid","configStringified","configResponse","JSON","parse","setItem","stringify","String","Date","now","COULD_NOT_GET_CONFIG_MSG","authToken","configEndPoint","request","Request","method","headers","Authorization","body","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","response","ok","json","catch","entries","fpr_enabled","fpr_log_source","Number","fpr_log_endpoint_url","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","expiry","samplingRate","Math","random","initializationStatus","initializationPromise","getInitializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","readyState","handler_1","removeEventListener","addEventListener","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","isTransportSetup","setupTransportService","processQueue","timeOffset","setTimeout","dispatchQueueEvents","staged","__spreadArrays","log_event","map","evt","source_extension_json_proto3","message","event_time_ms","eventTime","data","request_time_ms","client_info","client_type","js_client_info","log_source","sendEventsToFl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","isNaN","max","logResponseDetails","Array","isArray","responseAction","flTransportFullUrl","addToQueue","transportHandler","serializer","args","arguments","apply","logger","sendLog","resource","resourceType","logTrace","trace","settingsService","isAuto","sendTraceLog","logNetworkRequest","networkRequest","networkRequestUrl","url","logEndpointUrl","flEndpointUrl","serializeNetworkRequest","serializeTrace","networkRequestMetric","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","keys","counters","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","MAX_METRIC_NAME_LENGTH","RESERVED_AUTO_PREFIX","oobMetrics","isValidMetricName","traceName","indexOf","convertMetricValueToInteger","providedValue","valueAsInteger","floor","Trace","traceMeasureName","state","api","randomId","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","start","stop","record","startTime","duration","attributes","__assign","metrics","metric","incrementMetric","counter","numAsInteger","putMetric","customMetricName","getMetric","putAttribute","attr","isValidName","isValidValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","resources","resources_1","timeoutId_1","fid","clearTimeout","measures","measures_1","substring","PerformanceController","app","validateIndexedDBOpenable","isAvailable","error","get","set","val","enumerable","configurable","DEFAULT_ENTRY_NAME","registerPerformance","instance","factoryMethod","installations","INTERNAL","registerComponent","Component","container","getProvider","getImmediate","registerVersion"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@firebase/performance/dist/index.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar firebase = require('@firebase/app');\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\r\n    _a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (!fetch ||\r\n            !Promise ||\r\n            !this.navigator ||\r\n            !this.navigator.cookieEnabled) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!util.isIndexedDBAvailable()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Capture a snapshot of the queue and empty the \"official queue\".\r\n    var staged = tslib.__spreadArrays(queue);\r\n    queue = [];\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = tslib.__spreadArrays(staged, queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = tslib.__spreadArrays(staged, queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = tslib.__spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    var settingsService = SettingsService.getInstance();\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\r\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\r\nfunction convertMetricValueToInteger(providedValue) {\r\n    var valueAsInteger = Math.floor(providedValue);\r\n    if (valueAsInteger < providedValue) {\r\n        consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\r\n    }\r\n    return valueAsInteger;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        if (startTime <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        if (duration <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist. The value will be floored down to an\r\n     * integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\r\n        if (numAsInteger === void 0) { numAsInteger = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, numAsInteger);\r\n        }\r\n        else {\r\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist. The value will be floored down to an integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            util.validateIndexedDBOpenable()\r\n                .then(function (isAvailable) {\r\n                if (isAvailable) {\r\n                    setupTransportService();\r\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\r\n            });\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase__default['default']);\n\nexports.registerPerformance = registerPerformance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}