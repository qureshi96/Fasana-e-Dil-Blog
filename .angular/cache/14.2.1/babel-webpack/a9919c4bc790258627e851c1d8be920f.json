{"ast":null,"code":"import _defineProperty from \"/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { map, share, scan, withLatestFrom, skipWhile, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, asyncScheduler, merge, of } from 'rxjs';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport firebase from 'firebase/compat/app';\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\n\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let fn = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({\n          snapshot,\n          prevKey\n        });\n      });\n\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n\n      };\n    } else {\n      return {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        unsubscribe() {}\n\n      };\n    }\n  }).pipe(map(payload => {\n    const {\n      snapshot,\n      prevKey\n    } = payload;\n    let key = null;\n\n    if (snapshot.exists()) {\n      key = snapshot.key;\n    }\n\n    return {\n      type: event,\n      payload: snapshot,\n      prevKey,\n      key\n    };\n  }), share());\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isFirebaseDataSnapshot(value) {\n  return typeof value.exportVal === 'function';\n}\n\nfunction isNil(obj) {\n  return obj === undefined || obj === null;\n}\n\nfunction isFirebaseRef(value) {\n  return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\n\n\nfunction getRef(database, pathRef) {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef : database.ref(pathRef);\n}\n\nfunction checkOperationCases(item, cases) {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\nfunction validateEventsArray(events) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n\n  return events;\n}\n\nfunction stateChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n  const auditTrail$ = stateChanges(query, events).pipe(scan((current, action) => [...current, action], []));\n  return waitForLoaded(query, auditTrail$, scheduler);\n}\n\nfunction loadedData(query, scheduler) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, 'value', 'on', scheduler).pipe(map(data => {\n    // Store the last key in the data set\n    let lastKeyToLoad; // Loop through loaded dataset to find the last key\n\n    data.payload.forEach(child => {\n      lastKeyToLoad = child.key;\n      return false;\n    }); // return data set and the current last key loaded\n\n    return {\n      data,\n      lastKeyToLoad\n    };\n  }));\n}\n\nfunction waitForLoaded(query, action$, scheduler) {\n  const loaded$ = loadedData(query, scheduler);\n  return loaded$.pipe(withLatestFrom(action$), // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(([loaded, actions]) => {\n    // Store the last key in the data set\n    const lastKeyToLoad = loaded.lastKeyToLoad; // Store all child keys loaded at this point\n\n    const loadedKeys = actions.map(snap => snap.key);\n    return {\n      actions,\n      lastKeyToLoad,\n      loadedKeys\n    };\n  }), // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n  return function dataOperation(item, value) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item)[operation](value),\n      firebaseCase: () => item[operation](value),\n      snapshotCase: () => item.ref[operation](value)\n    });\n  };\n} // TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\n\n\nfunction createRemoveMethod(ref) {\n  return function remove(item) {\n    if (!item) {\n      return ref.remove();\n    }\n\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item).remove(),\n      firebaseCase: () => item.remove(),\n      snapshotCase: () => item.ref.remove()\n    });\n  };\n}\n\nfunction listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n    const childEvent$ = [of(snapshotAction)];\n    events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n    return merge(...childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n\nfunction positionFor(changes, key) {\n  const len = changes.length;\n\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const {\n    payload,\n    prevKey,\n    key\n  } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n\n  switch (action.type) {\n    case 'value':\n      if (action.payload?.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {\n            payload,\n            type: 'value',\n            prevKey,\n            key: payload.key\n          };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n\n      return current;\n\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n\n        if ((previous?.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n\n      return current;\n\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n    // default will also remove null results\n\n    default:\n      return current;\n  }\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  return listChanges(query, events, scheduler);\n}\n\nfunction createListReference(query, afDatabase) {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod(refInZone, 'update'),\n    set: createDataOperationMethod(refInZone, 'set'),\n    push: data => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n\n    snapshotChanges(events) {\n      return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n\n    stateChanges(events) {\n      return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n\n    auditTrail(events) {\n      return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n\n    valueChanges(events, options) {\n      const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(map(actions => actions.map(a => {\n        if (options && options.idField) {\n          return { ...a.payload.val(),\n            ...{\n              [options.idField]: a.key\n            }\n          };\n        } else {\n          return a.payload.val();\n        }\n      })), keepUnstableUntilFirst);\n    }\n\n  };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n  return function snapshotChanges() {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n\nfunction createObjectReference(query, afDatabase) {\n  return {\n    query,\n\n    snapshotChanges() {\n      return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n    },\n\n    update(data) {\n      return query.ref.update(data);\n    },\n\n    set(data) {\n      return query.ref.set(data);\n    },\n\n    remove() {\n      return query.ref.remove();\n    },\n\n    valueChanges() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n    }\n\n  };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\n\nclass AngularFireDatabase {\n  constructor(options, name, databaseURL, // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n  auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    _defineProperty(this, \"schedulers\", void 0);\n\n    _defineProperty(this, \"database\", void 0);\n\n    this.schedulers = schedulers;\n    const useEmulator = _useEmulator;\n    const app = ɵfirebaseAppFactory(options, zone, name);\n\n    if (auth) {\n      ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n\n    this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n\n      return database;\n    }, [useEmulator]);\n  }\n\n  list(pathOrRef, queryFn) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query = ref;\n\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n\n    return createListReference(query, this);\n  }\n\n  object(pathOrRef) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference(ref, this);\n  }\n\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n\n}\n\n_defineProperty(AngularFireDatabase, \"\\u0275fac\", function AngularFireDatabase_Factory(t) {\n  return new (t || AngularFireDatabase)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n});\n\n_defineProperty(AngularFireDatabase, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularFireDatabase,\n  factory: AngularFireDatabase.ɵfac,\n  providedIn: 'any'\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [URL]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: i2.AngularFireAuth,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i3.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\n\nclass AngularFireDatabaseModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n  }\n\n}\n\n_defineProperty(AngularFireDatabaseModule, \"\\u0275fac\", function AngularFireDatabaseModule_Factory(t) {\n  return new (t || AngularFireDatabaseModule)();\n});\n\n_defineProperty(AngularFireDatabaseModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularFireDatabaseModule\n}));\n\n_defineProperty(AngularFireDatabaseModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularFireDatabase]\n}));\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireDatabase]\n    }]\n  }], () => [], null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };","map":{"version":3,"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","i1","keepUnstableUntilFirst","VERSION","i3","ɵfirebaseAppFactory","ɵcacheInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","ɵauthFactory","USE_EMULATOR","USE_EMULATOR$1","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","map","share","scan","withLatestFrom","skipWhile","switchMap","distinctUntilChanged","Observable","asyncScheduler","merge","of","firebase","fromRef","ref","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","pipe","payload","key","exists","type","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","undefined","isFirebaseRef","set","getRef","database","pathRef","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","validateEventsArray","events","length","stateChanges","query","childEvent$","auditTrail","auditTrail$","current","action","waitForLoaded","loadedData","data","lastKeyToLoad","forEach","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","listChanges","snapshotAction","push","buildView","positionFor","changes","len","i","positionAfter","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","snapshotChanges","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","valueChanges","options","snapshotChanges$","a","idField","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","constructor","name","databaseURL","platformId","zone","_useEmulator","auth","useAuthEmulator","authSettings","tenantId","languageCode","useDeviceLanguage","persistence","_appCheckInstances","useEmulator","app","runOutsideAngular","list","pathOrRef","queryFn","object","createPushId","NgZone","ɵAngularFireSchedulers","AngularFireAuth","AppCheckInstances","args","providedIn","decorators","Object","AngularFireDatabaseModule","registerVersion","full","providers"],"sources":["/Users/usman/Documents/GitHub/Fasana-e-Dil-Blog/node_modules/@angular/fire/fesm2022/angular-fire-compat-database.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { map, share, scan, withLatestFrom, skipWhile, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, asyncScheduler, merge, of } from 'rxjs';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport firebase from 'firebase/compat/app';\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType === 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType === 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                unsubscribe() {\n                }\n            };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\nfunction validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\nfunction stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        // Store the last key in the data set\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload?.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                const previous = current[currentKeyPosition - 1];\n                if ((previous?.key || null) !== prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n\nfunction createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n    return {\n        query,\n        update: createDataOperationMethod(refInZone, 'update'),\n        set: createDataOperationMethod(refInZone, 'set'),\n        push: (data) => refInZone.push(data),\n        remove: createRemoveMethod(refInZone),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        valueChanges(events, options) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map(actions => actions.map(a => {\n                if (options && options.idField) {\n                    return {\n                        ...a.payload.val(),\n                        ...{\n                            [options.idField]: a.key\n                        }\n                    };\n                }\n                else {\n                    return a.payload.val();\n                }\n            })), keepUnstableUntilFirst);\n        }\n    };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n    schedulers;\n    database;\n    constructor(options, name, databaseURL, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n    auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n        this.schedulers = schedulers;\n        const useEmulator = _useEmulator;\n        const app = ɵfirebaseAppFactory(options, zone, name);\n        if (auth) {\n            ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n        }\n        this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n            const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n            if (useEmulator) {\n                database.useEmulator(...useEmulator);\n            }\n            return database;\n        }, [useEmulator]);\n    }\n    list(pathOrRef, queryFn) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n        return ref.push().key;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabase, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: URL, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: i2.AngularFireAuth, optional: true }, { token: USE_EMULATOR$1, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i3.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabase, providedIn: 'any' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [URL]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: i2.AngularFireAuth, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR$1]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SETTINGS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TENANT_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LANGUAGE_CODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_DEVICE_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PERSISTENCE]\n                }] }, { type: i3.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass AngularFireDatabaseModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabaseModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabaseModule, providers: [AngularFireDatabase] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: AngularFireDatabaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireDatabase]\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}